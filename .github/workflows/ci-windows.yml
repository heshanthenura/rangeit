name: Build and Release Nim Application (Windows)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  release:
    types: [created, published]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Nim
        run: |
          curl https://nim-lang.org/choosenim/init.sh -sSf | sh
          export PATH=~/.nimble/bin:$PATH
        shell: bash

      - name: Build Nim application
        run: nimble build
        shell: cmd

      - name: Verify the build
        run: rangeit.exe -calc 127.0.0.1/27 -au
        shell: cmd

      - name: Archive production artifacts
        run: mv rangeit.exe rangeit-windows.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rangeit-windows
          path: rangeit-windows.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: rangeit-windows
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/rangeit-windows.exe
          asset_name: rangeit-windows.exe
          asset_content_type: application/octet-stream
