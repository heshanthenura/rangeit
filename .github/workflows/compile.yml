name: Build and Release Nim Application

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  release:
    types: [created, published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Nim
        run: |
          curl https://nim-lang.org/choosenim/init.sh -sSf | sh
          export PATH=~/.nimble/bin:$PATH
        shell: bash

      - name: Build Nim application on Ubuntu and macOS
        if: runner.os != 'Windows'
        run: |
          nimble build
        shell: bash

      - name: Build Nim application on Windows
        if: runner.os == 'Windows'
        run: |
          nimble build
        shell: cmd

      - name: Verify the build
        run: |
          ./rangeit -calc 127.0.0.1/27 -au
        shell: bash
        if: runner.os != 'Windows'

      - name: Verify the build on Windows
        run: |
          rangeit.exe -calc 127.0.0.1/27 -au
        shell: cmd
        if: runner.os == 'Windows'

      - name: Archive production artifacts on Ubuntu and macOS
        if: runner.os != 'Windows'
        run: mv rangeit rangeit-${{ matrix.os }}

      - name: Archive production artifacts on Windows
        if: runner.os == 'Windows'
        run: mv rangeit.exe rangeit-windows.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rangeit-${{ runner.os }}
          path: ${{ runner.os == 'Windows' && 'rangeit-windows.exe' || 'rangeit-${{ matrix.os }}' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: rangeit-ubuntu
          path: ./artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: rangeit-macos
          path: ./artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: rangeit-windows
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/rangeit-ubuntu
          asset_name: rangeit-ubuntu
          asset_content_type: application/octet-stream

      - name: Upload Release Asset macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/rangeit-macos
          asset_name: rangeit-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/rangeit-windows.exe
          asset_name: rangeit-windows.exe
          asset_content_type: application/octet-stream
